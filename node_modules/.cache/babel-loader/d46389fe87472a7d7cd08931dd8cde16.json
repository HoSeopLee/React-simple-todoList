{"ast":null,"code":"import _slicedToArray from \"/Users/ihoseob/Downloads/react-hooks-todo-app-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ihoseob/Downloads/react-hooks-todo-app-master/src/index.js\";\nimport React, { useContext, useReducer } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Store from \"./context\";\nimport reducer from \"./reducer\";\nimport { usePersistedContext, usePersistedReducer } from \"./usePersist\";\nimport TodoList from \"./components/TodoList\";\nimport TodoForm from \"./components/TodoForm\";\n\nfunction App() {\n  // create a global store to store the state\n  var globalStore = usePersistedContext(useContext(Store), \"state\"); // `todos` will be a state manager to manage state.\n\n  var _usePersistedReducer = usePersistedReducer(useReducer(reducer, globalStore), \"state\" // The localStorage key\n  ),\n      _usePersistedReducer2 = _slicedToArray(_usePersistedReducer, 2),\n      state = _usePersistedReducer2[0],\n      dispatch = _usePersistedReducer2[1];\n\n  return (\n    /*#__PURE__*/\n    // State.Provider passes the state and dispatcher to the down\n    React.createElement(Store.Provider, {\n      value: {\n        state: state,\n        dispatch: dispatch\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(TodoForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(TodoList, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }))\n  );\n}\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/Users/ihoseob/Downloads/react-hooks-todo-app-master/src/index.js"],"names":["React","useContext","useReducer","ReactDOM","Store","reducer","usePersistedContext","usePersistedReducer","TodoList","TodoForm","App","globalStore","state","dispatch","rootElement","document","getElementById","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,QAA8C,OAA9C;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,cAAzD;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,SAASC,GAAT,GAAe;AACb;AACA,MAAMC,WAAW,GAAGL,mBAAmB,CAACL,UAAU,CAACG,KAAD,CAAX,EAAoB,OAApB,CAAvC,CAFa,CAIb;;AAJa,6BAKaG,mBAAmB,CAC3CL,UAAU,CAACG,OAAD,EAAUM,WAAV,CADiC,EAE3C,OAF2C,CAEnC;AAFmC,GALhC;AAAA;AAAA,MAKNC,KALM;AAAA,MAKCC,QALD;;AAUb;AAAA;AACE;AACA,wBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,QAAQ,EAARA;AAAT,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF;AAFF;AAOD;;AAED,IAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAb,QAAQ,CAACc,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBH,WAAzB","sourcesContent":["import React, { useContext, useReducer } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Store from \"./context\";\nimport reducer from \"./reducer\";\n\nimport { usePersistedContext, usePersistedReducer } from \"./usePersist\";\n\nimport TodoList from \"./components/TodoList\";\nimport TodoForm from \"./components/TodoForm\";\n\nfunction App() {\n  // create a global store to store the state\n  const globalStore = usePersistedContext(useContext(Store), \"state\");\n\n  // `todos` will be a state manager to manage state.\n  const [state, dispatch] = usePersistedReducer(\n    useReducer(reducer, globalStore),\n    \"state\" // The localStorage key\n  );\n\n  return (\n    // State.Provider passes the state and dispatcher to the down\n    <Store.Provider value={{ state, dispatch }}>\n      <TodoForm />\n      <TodoList />\n    </Store.Provider>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}